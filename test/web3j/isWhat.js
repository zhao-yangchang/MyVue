/**
 * #以太坊概述
 *  以太坊是备受关注的区块链，它基于密码学技术和P2P通信技术 构建了一个去中心化的平台，所有的交易同步保存在每个节点中， 通过将区块单向级联成链，以太坊有效的保证了交易的不可篡改：
 *
 * ##智能合约平台
 *   以太坊是第一个实现了虚拟机的区块链，因此为智能合约 - Smart Contract - 的运行提供了良好的支持环境。也正因为这个原因，以太坊被称为区块链 2.0，以区别于比特币代表的以数字加密货币为核心特征的区块链1.0
 *   可以将智能合约理解为机器之间的合同约定，在满足一定条件时自动 执行约定好的逻辑，例如在保险理赔流程中，如果理赔条件满足就自动 将赔偿金释放给出险人，这个流程就可以使用智能合约来实现。
 *   有多种语言可以开发以太坊智能合约，但目前最常用的是类似于JavaScript的 Solidity语言。本课程中将采用Solidity讲解智能合约的开发。
 *
 * ##JSON RPC与web3j
 *   如果我们希望构造一个去中心化应用（DApp），除了智能合约的开发， 通常还需要使用其他开发语言为用户提供操作智能合约的用户接口，例如 开发一个网页、一个手机App或者一个桌面应用。这些代码都需要与以太坊进行交互。
 *   以太坊规定了每个节点需要实现的JSON RPC API 应用开发接口，该接口是传输无关的，应用程序可以通过HTTP、websocket或IPC等多种 通信机制来使用该接口协议操作以太坊节点：
 *   理论上你可以使用任何语言基于JSON RPC接口开发出以太坊之上的 去中心化应用，不过为了提高开发效率，更好的办法是 使用特定语言的JSON RPC封装库，这些库封装了JSON RPC的协议细节， 有助于开发人员聚焦在业务逻辑的实现上。
 *   web3j是一个轻量级的用于集成以太坊功能的Java开发库，它是Java版本的以太坊JSON RPC 接口协议封装实现，如果需要将你的Java应用或Android应用接入以太坊，用web3j就对了。
 *
 * ##web3j体系概述
 *   web3j的功能组织在不同的包中，下图展示了org.web3j主要包之间的依赖关系： WechatIMG70.png
 *   core：JSON RPC协议的封装主要由包org.web3j.core实现，它依赖于org.web3j.crypto包提供的密钥与签名相关的功能，以及org.web3j.abi包提供的java/solidity类型映射支持。
 *   console：org.web3j.console包实现了一个可以单独运行的命令行程序web3j，我们将使用它来 生成solidity合约的Java封装类，其中，org.web3j.codegen包实现了从abi到java封装类的代码生成。
 *   节点相关：org.web3j.infura包封装了对Infura公共节点旳http访问服务接口， org.web3j.geth和org.web3j.parity则分别封装了这两种常用以太坊节点软件旳管理接口。
 */
